[user]
  email = xianhuawei.zhcn@qq.comm
  name = xianhuawei
[color]
    ui = true
[difftool "sourcetree"]
    cmd = opendiff \"$LOCAL\" \"$REMOTE\"
    path =
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = green
[alias]
    s = status
    ss = status -s
    co = checkout
    ci = commit -a
    st = status
    br = branch
    psm = push origin master
    plm = pull origin master
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    gp = pull --rebase origin develop
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    snapshots = !git stash list --grep snapshot

    recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'

    # branch
    b = branch                      # branch 
    ba = branch -av # branch (verbose)

    # commit
    c = commit
    amend = commit --amend            # ammend your last commit
    retry = commit -a --amend

    # checkout
    ck = checkout                     # checkout

    # cherry-pick
    cp = cherry-pick -x               # grab a change from a branch

    # diff
    d = diff                          # diff unstaged changes
    dc = diff --cached                # diff staged changes
    last = diff HEAD^                 # diff last committed change

    # log
    l = log --graph --date=short
    changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
    short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
    simple = log --pretty=format:\" * %s\"
    shortnocolor = log --pretty=format:\"%h %cr %cn %s\"


    # remote
    r = remote -v                     # show remotes (verbose)

    # reset
    unstage = reset HEAD              # remove files from index (tracking)
    uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
    filelog = log -u                  # show changes to a file
    mt = mergetool                    # fire up the merge tool

    # stash
    #ss = stash                        # stash changes
    #sl = stash list                   # list stashes
    #sa = stash apply                  # apply stash (restore changes)
    #sd = stash drop                   # drop stashes (destory changes)

    # push
    p = push

    # tag
    t = tag -n                        # show tags with <n> lines of each tag message

    # svn helpers
    svnr = svn rebase
    svnd = svn dcommit
    svnl = svn log --oneline --show-commit
[format]
    pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[mergetool]
    prompt = false
[mergetool "mvimdiff"]
    cmd="mvim -c 'Gdiff' $MERGED"     # use fugitive.vim for 3-way merge
    keepbackup=false
[merge]
    summary = true
    verbosity = 1
    tool = mvimdiff
[apply]
    whitespace = nowarn
[branch]
    autosetupmerge = true
[push]
    # 'git push' will push the current branch to its tracking branch
    # the usual default is to push all branches
    default = upstream
    
[core]
    excludesfile = ~/.gitignore_global
    autocrlf = false
    editor = vim
    quotepath = false # 解决git status中文乱码
[advice]
    statusHints = true
[diff]
    # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
    # instead of a/b/c/d as prefixes for patches
    mnemonicprefix = true
    algorithm = patience
[rerere]
    # Remember my merges
    enabled = true
[include]
    #path = .gitconfig.user

[difftool "vim"]
    cmd = vim \"$MERGED\"
    prompt = false

[push]
   default = tracking

[branch]
   autosetupmerge = true

[mergetool]
    keepBackup = false
    writeToTemp = true
[commit]
    verbose = true
[status]
    submodulesummary = true
    relativePaths = true
    showUntrackedFiles = no
